package ${packageName}.controller;

import java.util.List;
import javax.servlet.http.HttpServletResponse;
import org.springframework.security.access.prepost.PreAuthorize;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;
import com.jzj.common.annotation.Log;
import com.jzj.common.utils.result.R;
import io.swagger.annotations.ApiOperation;
import com.jzj.common.pojo.enums.BusinessType;
import ${packageName}.pojo.entity.${ClassName};
import ${packageName}.service.${ClassName}Service;
#if($table.crud || $table.sub)
import com.jzj.common.pojo.page.TableDataInfo;
#elseif($table.tree)
#end
#if($genExport == '1')
import com.jzj.base.utils.sign.EasyExcelUtils;
#end


/**
 * ${functionName}Controller
 * 
 * @author ${author}
 * @date ${datetime}
 */
@RestController
@RequestMapping("/${moduleName}/${businessName}")
public class ${ClassName}Controller extends BaseController {

    @Autowired
    private ${ClassName}Service ${className}Service;

    @ApiOperation("分页列表")
    @PreAuthorize("hasAuthority('${permissionPrefix}.list')")
    @GetMapping("/list")
#if($table.crud || $table.sub)
    public TableDataInfo list(${ClassName} ${className}) {
        startPage();
        List<${ClassName}> list = ${className}Service.select${ClassName}List(${className});
        return getDataTable(list);
    }
#elseif($table.tree)
    public AjaxResult list(${ClassName} ${className}) {
        List<${ClassName}> list = ${className}Service.select${ClassName}List(${className});
        return success(list);
    }
#end

    @ApiOperation("根据id获取详细信息")
    @PreAuthorize("hasAuthority('${permissionPrefix}.list')")
    @GetMapping(value = "/{${pkColumn.javaField}}")
    public R getInfo(@PathVariable("${pkColumn.javaField}") ${pkColumn.javaType} ${pkColumn.javaField}) {
        return R.ok(${className}Service.select${ClassName}By${pkColumn.capJavaField}(${pkColumn.javaField}));
    }

    @ApiOperation("新增")
    @PreAuthorize("hasAuthority('${permissionPrefix}.add')")
    @Log(title = "${functionName}", businessType = BusinessType.INSERT)
    @PostMapping
    public R add(@RequestBody ${ClassName} ${className}) {
        return toAjax(${className}Service.insert${ClassName}(${className}));
    }

    @ApiOperation("修改")
    @PreAuthorize("hasAuthority('${permissionPrefix}.edit')")
    @Log(title = "${functionName}", businessType = BusinessType.UPDATE)
    @PutMapping
    public R edit(@RequestBody ${ClassName} ${className}) {
        return toAjax(${className}Service.update${ClassName}(${className}));
    }

    @ApiOperation("删除")
    @PreAuthorize("hasAuthority('${permissionPrefix}.remove')")
    @Log(title = "${functionName}", businessType = BusinessType.DELETE)
    @DeleteMapping("/{${pkColumn.javaField}s}")
    public R remove(@PathVariable ${pkColumn.javaType}[] ${pkColumn.javaField}s) {
        return toAjax(${className}Service.delete${ClassName}By${pkColumn.capJavaField}s(${pkColumn.javaField}s));
    }

#if($genExport == '1')
    @ApiOperation("导出")
    @PreAuthorize("hasAuthority('${permissionPrefix}.export')")
    @Log(title = "${functionName}", businessType = BusinessType.EXPORT)
    @PostMapping("/export")
    public void export(${ClassName} ${className}, HttpServletResponse response){
        EasyExcelUtils.export("${functionName}",${className}Service.select${ClassName}List(${className}), ${ClassName}.class, response);
    }
#end
}
